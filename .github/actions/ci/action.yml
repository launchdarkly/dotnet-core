name: CI
description: Runs CI for the .NET Server SDK
inputs:
  project_file:
    description: 'Path to the project file.'
    required: true
  test_project_file:
    description: 'Path to the test project file.  If provided, run unit tests, otherwise skip them.'
    required: false
  target_test_framework:
    description: 'The target test framework to use.'
    required: false
    default: 'net8.0'
  test_verbosity:
    description: 'The verbosity level of the test output.'
    required: false
    default: 'normal'
  run_consul:
    description: 'Run an instance of Consul'
    required: false
    default: false
  run_dynamodb:
    description: 'Run an instance of DynamoDB'
    required: false
    default: false
  run_redis:
    description: 'Run an instance of Redis'
    required: false
    default: false

runs:
  using: composite
  steps:
    - name: Setup dotnet build tools
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0
          7.0

    - name: Setup Consul if needed
      uses: launchdarkly/gh-actions/actions/persistent-stores@persistent-stores-v0.1.0
      if: inputs.run_consul == 'true'
      with:
        consul: true

    - name: Setup DynamoDB if needed
      uses: launchdarkly/gh-actions/actions/persistent-stores@persistent-stores-v0.1.0
      if: inputs.run_dynamodb == 'true'
      with:
        dynamodb: true

    - name: Setup Redis if needed
      uses: launchdarkly/gh-actions/actions/persistent-stores@persistent-stores-v0.1.0
      if: inputs.run_redis == 'true'
      with:
        redis: true

    - name: Copy global.json in place
      shell: bash
      run: cp global.example.json global.json

    - name: Restore Workloads
      shell: bash
      run: dotnet workload restore ${{ inputs.project_file }}

    - name: Restore Dependencies
      shell: bash
      run: dotnet restore ${{ inputs.project_file }}

    - name: Build
      shell: bash
      run: dotnet build -p:Configuration=debug ${{ inputs.project_file }}

    - name: Run Unit Tests
      if: ${{ inputs.test_project_file != '' }}
      shell: bash
      run: |
        dotnet restore ${{ inputs.test_project_file }}
        dotnet test -v=${{ inputs.test_verbosity }} --framework=${{ inputs.target_test_framework }} ${{ inputs.test_project_file }}

    - name: Remove global.json
      shell: bash
      run: rm global.json
